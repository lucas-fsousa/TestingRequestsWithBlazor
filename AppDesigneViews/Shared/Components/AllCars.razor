@inject ICarRequestService _request
@inject NavigationManager _navigation

@if(ListCar != null) {
  @foreach(var car in ListCar) {
    <GenericCarRender Car="car" />
  }

}


<span> Current &lt;&lt; @CurrentPage &gt;&gt;&nbsp;</span>
<button @onclick="GetCarsForPreviousPage" class="btn btn-secondary">Previous</button>
<button @onclick="GetCarsForNextPage" class="btn btn-info">Next</button>

<style>
  .cards {
    margin-left: 1%;
    margin-right: 1%;
  }
</style>

@code {

  public List<Car> ListCar { get; set; }
  public int CurrentPage { get; set; } = 1;

  protected override async Task OnInitializedAsync() {
    ListCar = await _request.GetAllForCurrentPage(CurrentPage);
  }

  private async Task GetCarsForNextPage() {
    CurrentPage++;
    var result = await _request.GetAllForCurrentPage(CurrentPage);
    if(result != null) {
      ListCar = result;
    } else {
      CurrentPage--;
      ListCar = await _request.GetAllForCurrentPage(CurrentPage);
    }
  }

  private async Task Delete(int id) {
    Console.WriteLine("invocou o delete");
    //await _request.DeleteByIdAsync(id);
    //_navigation.NavigateTo("");
  }

  private async Task GetCarsForPreviousPage() {
    if(CurrentPage > 1) {
      CurrentPage--;
    }
    ListCar = await _request.GetAllForCurrentPage(CurrentPage);
  }
}
