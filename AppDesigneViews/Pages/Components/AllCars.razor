@inject ICarRequestService _request
@inject NavigationManager _navigation

@if(ListCar != null) {
  <div class="card-group row">
    @foreach(var car in ListCar) {
      <div class="card-deck col-md-5 cards" style="width: 11rem;">
        <img class="card-img-top" src="https://blog.catarinacarros.com.br/wp-content/uploads/2019/04/quiz.jpg" alt="Card image cap">
        <div class="card-body">
          <h5 class="card-title">@car.Name - @car.Model release date @car.ModelReleaseYear</h5>
          <p class="card-text">@car.MaxKm</p>
          <p class="card-text">@car.Manufacturer</p>
          <span><a @onclick="(()=> Delete(car.Id))" class="link">Delete</a> | <a>Edit</a></span>
        </div>
      </div>
    }
  </div>
}


<span> Current &lt;&lt; @CurrentPage &gt;&gt;&nbsp;</span>
<button @onclick="GetCarsForPreviousPage" class="btn btn-secondary">Previous</button>
<button @onclick="GetCarsForNextPage" class="btn btn-info">Next</button>

<style>
  .cards {
    margin-left: 1%;
    margin-right: 1%;
  }
</style>

@code {

  public List<Car> ListCar { get; set; }
  public int CurrentPage { get; set; } = 1;

  protected override async Task OnInitializedAsync() {
    ListCar = await _request.GetAllForCurrentPage(CurrentPage);
  }

  private async Task GetCarsForNextPage() {
    CurrentPage++;
    var result = await _request.GetAllForCurrentPage(CurrentPage);
    if(result != null) {
      ListCar = result;
    } else {
      CurrentPage--;
      ListCar = await _request.GetAllForCurrentPage(CurrentPage);
    }
  }

  private async Task Delete(int id) {
    await _request.DeleteByIdAsync(id);
    _navigation.NavigateTo("");
  }

  private async Task GetCarsForPreviousPage() {
    if(CurrentPage > 1) {
      CurrentPage--;
    }
    ListCar = await _request.GetAllForCurrentPage(CurrentPage);
  }
}
