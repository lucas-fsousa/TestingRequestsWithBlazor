@inject IRequestService _request
@inject NavigationManager _navigation
@inherits LayoutComponentBase

<div>
  <EditForm Model="login" OnValidSubmit="Authentication">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group row">
      <span class="oi oi-person" aria-hidden="true">&nbsp;</span><label>User</label>
      <div class="col-sm-4">
        <InputText @bind-Value="login.UserLogin" class="form-control" />
        <ValidationMessage For="@(()=> login.UserLogin)" />
      </div>
    </div>

    <div class="form-group row">
      <span class="oi oi-key" aria-hidden="true">&nbsp;</span><label>Pass</label>
      <div class="col-sm-4">
        <InputText type="password" @bind-Value="login.Password" class="form-control" />
        <ValidationMessage For="@(()=> login.Password)" />
      </div>
    </div>
    <button class="btn btn-success" type="submit">Let me in</button>
  </EditForm>
  <p>Don't have an account? <a @onclick="Create" id="link_createAcc">create account</a></p>
</div>

<div class="container">
  @Body
</div>

<style scoped>
  #link_createAcc {
    color: #052c8a;
  }

    #link_createAcc:hover {
      color: #000e79;
      text-decoration: underline;
      cursor: pointer;
    }
</style>


@if(User != null) {
  _navigation.NavigateTo("/home");
}


@code {

  private User User { get; set; }

  private UserLoginModel login = new UserLoginModel();

  private void Create() {
    _navigation.NavigateTo("/user/register");
  }

  private async Task Authentication() {
    Console.WriteLine("chegou");
    User = await _request.LogOn(login);
  }

}
